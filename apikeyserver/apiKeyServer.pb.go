// apiKeyServer - gRCP/protobufs API key server for Torn API
//    Copyright (C) 2021  Dave Ryack
//
//    This program is free software: you can redistribute it and/or modify
//    it under the terms of the GNU Affero General Public License as published
//    by the Free Software Foundation, either version 3 of the License, or
//    (at your option) any later version.
//
//    This program is distributed in the hope that it will be useful,
//    but WITHOUT ANY WARRANTY; without even the implied warranty of
//    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//    GNU Affero General Public License for more details.
//
//    You should have received a copy of the GNU Affero General Public License
//    along with this program.  If not, see <https://www.gnu.org/licenses/>.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-devel
// 	protoc        v3.11.4
// source: apiKeyServer.proto

package apikeyserver

import (
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// request a new key from the server
type RequestKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester        string                `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	Type             string                `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	AcceptExhaustion bool                  `protobuf:"varint,3,opt,name=acceptExhaustion,proto3" json:"acceptExhaustion,omitempty"` // requester doesn't want to wait, and instead wishes be told there are no keys available
	FieldMask        *field_mask.FieldMask `protobuf:"bytes,4,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *RequestKey) Reset() {
	*x = RequestKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestKey) ProtoMessage() {}

func (x *RequestKey) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestKey.ProtoReflect.Descriptor instead.
func (*RequestKey) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{0}
}

func (x *RequestKey) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *RequestKey) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RequestKey) GetAcceptExhaustion() bool {
	if x != nil {
		return x.AcceptExhaustion
	}
	return false
}

func (x *RequestKey) GetFieldMask() *field_mask.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// request information about the server
type RequestServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester string                `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	FieldMask *field_mask.FieldMask `protobuf:"bytes,2,opt,name=field_mask,json=fieldMask,proto3" json:"field_mask,omitempty"`
}

func (x *RequestServerInfo) Reset() {
	*x = RequestServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestServerInfo) ProtoMessage() {}

func (x *RequestServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestServerInfo.ProtoReflect.Descriptor instead.
func (*RequestServerInfo) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{1}
}

func (x *RequestServerInfo) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *RequestServerInfo) GetFieldMask() *field_mask.FieldMask {
	if x != nil {
		return x.FieldMask
	}
	return nil
}

// responding to RequestKey
type GetKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string                  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name      string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type      string                  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Time      int64                   `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"` // unixNano
	Items     []*KeyResponseRemaining `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	Exhausted bool                    `protobuf:"varint,6,opt,name=exhausted,proto3" json:"exhausted,omitempty"` // no keys remaining
}

func (x *GetKeyResponse) Reset() {
	*x = GetKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKeyResponse) ProtoMessage() {}

func (x *GetKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKeyResponse.ProtoReflect.Descriptor instead.
func (*GetKeyResponse) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{2}
}

func (x *GetKeyResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetKeyResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetKeyResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetKeyResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetKeyResponse) GetItems() []*KeyResponseRemaining {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetKeyResponse) GetExhausted() bool {
	if x != nil {
		return x.Exhausted
	}
	return false
}

// sub-response for RequestKey
type KeyResponseRemaining struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyResponseTypeNames string `protobuf:"bytes,1,opt,name=KeyResponseTypeNames,proto3" json:"KeyResponseTypeNames,omitempty"`
	TypeRemaining        uint32 `protobuf:"varint,2,opt,name=typeRemaining,proto3" json:"typeRemaining,omitempty"`
}

func (x *KeyResponseRemaining) Reset() {
	*x = KeyResponseRemaining{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyResponseRemaining) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyResponseRemaining) ProtoMessage() {}

func (x *KeyResponseRemaining) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyResponseRemaining.ProtoReflect.Descriptor instead.
func (*KeyResponseRemaining) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{3}
}

func (x *KeyResponseRemaining) GetKeyResponseTypeNames() string {
	if x != nil {
		return x.KeyResponseTypeNames
	}
	return ""
}

func (x *KeyResponseRemaining) GetTypeRemaining() uint32 {
	if x != nil {
		return x.TypeRemaining
	}
	return 0
}

// type for KeyResponseRemaining
type KeyResponseTypeNames struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeName string `protobuf:"bytes,1,opt,name=typeName,proto3" json:"typeName,omitempty"`
}

func (x *KeyResponseTypeNames) Reset() {
	*x = KeyResponseTypeNames{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyResponseTypeNames) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyResponseTypeNames) ProtoMessage() {}

func (x *KeyResponseTypeNames) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyResponseTypeNames.ProtoReflect.Descriptor instead.
func (*KeyResponseTypeNames) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{4}
}

func (x *KeyResponseTypeNames) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

// Request a key be unusable until the keys are re-initialized
type RequestKillKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester string `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Time      int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"` // unixNano
}

func (x *RequestKillKey) Reset() {
	*x = RequestKillKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestKillKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestKillKey) ProtoMessage() {}

func (x *RequestKillKey) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestKillKey.ProtoReflect.Descriptor instead.
func (*RequestKillKey) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{5}
}

func (x *RequestKillKey) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *RequestKillKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RequestKillKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestKillKey) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// Request a key be permanently killed until the service is restarted
type RequestPermKillKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester string `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	Key       string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Time      int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"` // unixNano
}

func (x *RequestPermKillKey) Reset() {
	*x = RequestPermKillKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestPermKillKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestPermKillKey) ProtoMessage() {}

func (x *RequestPermKillKey) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestPermKillKey.ProtoReflect.Descriptor instead.
func (*RequestPermKillKey) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{6}
}

func (x *RequestPermKillKey) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *RequestPermKillKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RequestPermKillKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestPermKillKey) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// Request a key be killed for until t Time
type RequestTimedKillKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requester  string `protobuf:"bytes,1,opt,name=requester,proto3" json:"requester,omitempty"`
	Key        string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Time       int64  `protobuf:"varint,4,opt,name=time,proto3" json:"time,omitempty"`             // unixNano
	ReturnTime int64  `protobuf:"varint,5,opt,name=returnTime,proto3" json:"returnTime,omitempty"` // time when key will be returned to service
}

func (x *RequestTimedKillKey) Reset() {
	*x = RequestTimedKillKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTimedKillKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTimedKillKey) ProtoMessage() {}

func (x *RequestTimedKillKey) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTimedKillKey.ProtoReflect.Descriptor instead.
func (*RequestTimedKillKey) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{7}
}

func (x *RequestTimedKillKey) GetRequester() string {
	if x != nil {
		return x.Requester
	}
	return ""
}

func (x *RequestTimedKillKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RequestTimedKillKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RequestTimedKillKey) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *RequestTimedKillKey) GetReturnTime() int64 {
	if x != nil {
		return x.ReturnTime
	}
	return 0
}

// response for RequestKillKey and RequestPermKillKey
type GenericKillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool  `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Time   int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"` // unixNano
}

func (x *GenericKillResponse) Reset() {
	*x = GenericKillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenericKillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenericKillResponse) ProtoMessage() {}

func (x *GenericKillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenericKillResponse.ProtoReflect.Descriptor instead.
func (*GenericKillResponse) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{8}
}

func (x *GenericKillResponse) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *GenericKillResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type TimedKillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result          *GenericKillResponse `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	ReturnToService int64                `protobuf:"varint,2,opt,name=returnToService,proto3" json:"returnToService,omitempty"` //unixNano
}

func (x *TimedKillResponse) Reset() {
	*x = TimedKillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimedKillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimedKillResponse) ProtoMessage() {}

func (x *TimedKillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimedKillResponse.ProtoReflect.Descriptor instead.
func (*TimedKillResponse) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{9}
}

func (x *TimedKillResponse) GetResult() *GenericKillResponse {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TimedKillResponse) GetReturnToService() int64 {
	if x != nil {
		return x.ReturnToService
	}
	return 0
}

// response for RequestServerInfo
type GetServerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerVersion            string                `protobuf:"bytes,1,opt,name=serverVersion,proto3" json:"serverVersion,omitempty"`                        // keys.ServerVersion
	KeyExhaustions           uint32                `protobuf:"varint,2,opt,name=keyExhaustions,proto3" json:"keyExhaustions,omitempty"`                     // keys.TotalExhaustions
	TotalAvailableUsesPerMin uint64                `protobuf:"varint,3,opt,name=totalAvailableUsesPerMin,proto3" json:"totalAvailableUsesPerMin,omitempty"` // keys.TotalPerMinute
	TotalKeysServed          uint64                `protobuf:"varint,4,opt,name=totalKeysServed,proto3" json:"totalKeysServed,omitempty"`                   // keys.TotalKeysServed
	TotalKeysKilled          uint64                `protobuf:"varint,5,opt,name=totalKeysKilled,proto3" json:"totalKeysKilled,omitempty"`                   // computed
	KeyNamesPermaKilled      string                `protobuf:"bytes,6,opt,name=keyNamesPermaKilled,proto3" json:"keyNamesPermaKilled,omitempty"`
	Items                    []*KeyDetailsResponse `protobuf:"bytes,7,rep,name=items,proto3" json:"items,omitempty"`
	Time                     int64                 `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	Uptime                   int64                 `protobuf:"varint,9,opt,name=uptime,proto3" json:"uptime,omitempty"`                             // computed
	AvgKeysServedPerMin      float32               `protobuf:"fixed32,10,opt,name=avgKeysServedPerMin,proto3" json:"avgKeysServedPerMin,omitempty"` // computed
}

func (x *GetServerInfoResponse) Reset() {
	*x = GetServerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServerInfoResponse) ProtoMessage() {}

func (x *GetServerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetServerInfoResponse) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{10}
}

func (x *GetServerInfoResponse) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *GetServerInfoResponse) GetKeyExhaustions() uint32 {
	if x != nil {
		return x.KeyExhaustions
	}
	return 0
}

func (x *GetServerInfoResponse) GetTotalAvailableUsesPerMin() uint64 {
	if x != nil {
		return x.TotalAvailableUsesPerMin
	}
	return 0
}

func (x *GetServerInfoResponse) GetTotalKeysServed() uint64 {
	if x != nil {
		return x.TotalKeysServed
	}
	return 0
}

func (x *GetServerInfoResponse) GetTotalKeysKilled() uint64 {
	if x != nil {
		return x.TotalKeysKilled
	}
	return 0
}

func (x *GetServerInfoResponse) GetKeyNamesPermaKilled() string {
	if x != nil {
		return x.KeyNamesPermaKilled
	}
	return ""
}

func (x *GetServerInfoResponse) GetItems() []*KeyDetailsResponse {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GetServerInfoResponse) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetServerInfoResponse) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *GetServerInfoResponse) GetAvgKeysServedPerMin() float32 {
	if x != nil {
		return x.AvgKeysServedPerMin
	}
	return 0
}

// sub-response on the details of each key for GetServerInfoResponse
type KeyDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Types  string `protobuf:"bytes,2,opt,name=types,proto3" json:"types,omitempty"`
	Uses   uint32 `protobuf:"varint,3,opt,name=uses,proto3" json:"uses,omitempty"`
	Kills  uint32 `protobuf:"varint,4,opt,name=kills,proto3" json:"kills,omitempty"`
	Active bool   `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
}

func (x *KeyDetailsResponse) Reset() {
	*x = KeyDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apiKeyServer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyDetailsResponse) ProtoMessage() {}

func (x *KeyDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_apiKeyServer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyDetailsResponse.ProtoReflect.Descriptor instead.
func (*KeyDetailsResponse) Descriptor() ([]byte, []int) {
	return file_apiKeyServer_proto_rawDescGZIP(), []int{11}
}

func (x *KeyDetailsResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KeyDetailsResponse) GetTypes() string {
	if x != nil {
		return x.Types
	}
	return ""
}

func (x *KeyDetailsResponse) GetUses() uint32 {
	if x != nil {
		return x.Uses
	}
	return 0
}

func (x *KeyDetailsResponse) GetKills() uint32 {
	if x != nil {
		return x.Kills
	}
	return 0
}

func (x *KeyDetailsResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

var File_apiKeyServer_proto protoreflect.FileDescriptor

var file_apiKeyServer_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x45,
	0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x10, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73,
	0x6b, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x6c, 0x0a, 0x11,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0xb6, 0x01, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69,
	0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x78, 0x68, 0x61, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x22, 0x70, 0x0a, 0x14, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x12, 0x32, 0x0a, 0x14, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x74, 0x79, 0x70, 0x65, 0x52, 0x65, 0x6d, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x14, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x22, 0x6c, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x65,
	0x72, 0x6d, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x64, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x41, 0x0a, 0x13, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x78, 0x0a, 0x11, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x4b, 0x69, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x6b,
	0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63,
	0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0xbd,
	0x03, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26,
	0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x6b, 0x65, 0x79, 0x45, 0x78, 0x68, 0x61, 0x75,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4d,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x55, 0x73, 0x65, 0x73, 0x50, 0x65, 0x72, 0x4d,
	0x69, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4b, 0x65, 0x79, 0x73,
	0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x6b, 0x65, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x50, 0x65, 0x72,
	0x6d, 0x61, 0x4b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x13,
	0x61, 0x76, 0x67, 0x4b, 0x65, 0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x65, 0x72,
	0x4d, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x61, 0x76, 0x67, 0x4b, 0x65,
	0x79, 0x73, 0x53, 0x65, 0x72, 0x76, 0x65, 0x64, 0x50, 0x65, 0x72, 0x4d, 0x69, 0x6e, 0x22, 0x80,
	0x01, 0x0a, 0x12, 0x4b, 0x65, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x32, 0xa5, 0x03, 0x0a, 0x0c, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x12, 0x42, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x2e, 0x61,
	0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x07, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x1a,
	0x21, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0b, 0x50, 0x65, 0x72, 0x6d, 0x4b, 0x69, 0x6c, 0x6c,
	0x4b, 0x65, 0x79, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x65, 0x72, 0x6d, 0x4b, 0x69,
	0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x4b, 0x69, 0x6c, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x0c, 0x54, 0x69,
	0x6d, 0x65, 0x64, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x64, 0x4b, 0x69, 0x6c, 0x6c, 0x4b, 0x65, 0x79, 0x1a, 0x1f, 0x2e,
	0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x64, 0x4b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x26, 0x0a, 0x04, 0x6d, 0x61, 0x69,
	0x6e, 0x42, 0x0c, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50,
	0x01, 0x5a, 0x0e, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x6b, 0x65, 0x79, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apiKeyServer_proto_rawDescOnce sync.Once
	file_apiKeyServer_proto_rawDescData = file_apiKeyServer_proto_rawDesc
)

func file_apiKeyServer_proto_rawDescGZIP() []byte {
	file_apiKeyServer_proto_rawDescOnce.Do(func() {
		file_apiKeyServer_proto_rawDescData = protoimpl.X.CompressGZIP(file_apiKeyServer_proto_rawDescData)
	})
	return file_apiKeyServer_proto_rawDescData
}

var file_apiKeyServer_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_apiKeyServer_proto_goTypes = []interface{}{
	(*RequestKey)(nil),            // 0: apikeyserver.RequestKey
	(*RequestServerInfo)(nil),     // 1: apikeyserver.RequestServerInfo
	(*GetKeyResponse)(nil),        // 2: apikeyserver.GetKeyResponse
	(*KeyResponseRemaining)(nil),  // 3: apikeyserver.KeyResponseRemaining
	(*KeyResponseTypeNames)(nil),  // 4: apikeyserver.KeyResponseTypeNames
	(*RequestKillKey)(nil),        // 5: apikeyserver.RequestKillKey
	(*RequestPermKillKey)(nil),    // 6: apikeyserver.RequestPermKillKey
	(*RequestTimedKillKey)(nil),   // 7: apikeyserver.RequestTimedKillKey
	(*GenericKillResponse)(nil),   // 8: apikeyserver.GenericKillResponse
	(*TimedKillResponse)(nil),     // 9: apikeyserver.TimedKillResponse
	(*GetServerInfoResponse)(nil), // 10: apikeyserver.GetServerInfoResponse
	(*KeyDetailsResponse)(nil),    // 11: apikeyserver.KeyDetailsResponse
	(*field_mask.FieldMask)(nil),  // 12: google.protobuf.FieldMask
}
var file_apiKeyServer_proto_depIdxs = []int32{
	12, // 0: apikeyserver.RequestKey.field_mask:type_name -> google.protobuf.FieldMask
	12, // 1: apikeyserver.RequestServerInfo.field_mask:type_name -> google.protobuf.FieldMask
	3,  // 2: apikeyserver.GetKeyResponse.items:type_name -> apikeyserver.KeyResponseRemaining
	8,  // 3: apikeyserver.TimedKillResponse.result:type_name -> apikeyserver.GenericKillResponse
	11, // 4: apikeyserver.GetServerInfoResponse.items:type_name -> apikeyserver.KeyDetailsResponse
	0,  // 5: apikeyserver.ApiKeyServer.GetKey:input_type -> apikeyserver.RequestKey
	5,  // 6: apikeyserver.ApiKeyServer.KillKey:input_type -> apikeyserver.RequestKillKey
	6,  // 7: apikeyserver.ApiKeyServer.PermKillKey:input_type -> apikeyserver.RequestPermKillKey
	7,  // 8: apikeyserver.ApiKeyServer.TimedKillKey:input_type -> apikeyserver.RequestTimedKillKey
	1,  // 9: apikeyserver.ApiKeyServer.GetServerInfo:input_type -> apikeyserver.RequestServerInfo
	2,  // 10: apikeyserver.ApiKeyServer.GetKey:output_type -> apikeyserver.GetKeyResponse
	8,  // 11: apikeyserver.ApiKeyServer.KillKey:output_type -> apikeyserver.GenericKillResponse
	8,  // 12: apikeyserver.ApiKeyServer.PermKillKey:output_type -> apikeyserver.GenericKillResponse
	9,  // 13: apikeyserver.ApiKeyServer.TimedKillKey:output_type -> apikeyserver.TimedKillResponse
	10, // 14: apikeyserver.ApiKeyServer.GetServerInfo:output_type -> apikeyserver.GetServerInfoResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_apiKeyServer_proto_init() }
func file_apiKeyServer_proto_init() {
	if File_apiKeyServer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apiKeyServer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyResponseRemaining); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyResponseTypeNames); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestKillKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestPermKillKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTimedKillKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenericKillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimedKillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apiKeyServer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apiKeyServer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_apiKeyServer_proto_goTypes,
		DependencyIndexes: file_apiKeyServer_proto_depIdxs,
		MessageInfos:      file_apiKeyServer_proto_msgTypes,
	}.Build()
	File_apiKeyServer_proto = out.File
	file_apiKeyServer_proto_rawDesc = nil
	file_apiKeyServer_proto_goTypes = nil
	file_apiKeyServer_proto_depIdxs = nil
}
