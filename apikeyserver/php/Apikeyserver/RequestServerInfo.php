<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: apiKeyServer.proto

namespace Apikeyserver;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * request information about the server
 *
 * Generated from protobuf message <code>apikeyserver.RequestServerInfo</code>
 */
class RequestServerInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>string requester = 1;</code>
     */
    protected $requester = '';
    /**
     * Generated from protobuf field <code>.google.protobuf.FieldMask field_mask = 2;</code>
     */
    protected $field_mask = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type string $requester
     *     @type \Google\Protobuf\FieldMask $field_mask
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\ApiKeyServer::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>string requester = 1;</code>
     * @return string
     */
    public function getRequester()
    {
        return $this->requester;
    }

    /**
     * Generated from protobuf field <code>string requester = 1;</code>
     * @param string $var
     * @return $this
     */
    public function setRequester($var)
    {
        GPBUtil::checkString($var, True);
        $this->requester = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.FieldMask field_mask = 2;</code>
     * @return \Google\Protobuf\FieldMask
     */
    public function getFieldMask()
    {
        return $this->field_mask;
    }

    /**
     * Generated from protobuf field <code>.google.protobuf.FieldMask field_mask = 2;</code>
     * @param \Google\Protobuf\FieldMask $var
     * @return $this
     */
    public function setFieldMask($var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\FieldMask::class);
        $this->field_mask = $var;

        return $this;
    }

}

